
Take the given index.html file as Application Under Test

Test 1

Navigate to home page
Assert that both the email address and password inputs are present as well as the login button
Enter in an email address and password combination into the respective fields


Test 2

Navigate to home page
In the test 2 div, assert that there are three values in the listgroup
Assert that the second list item's value is set to "List Item 2"
Assert that the second list item's badge value is 6

Test 3 

Navigate to the home page
In the test 3 div, assert that "Option 1" is the default selected value
Select "Option 3" from the select list

Test 4

Navigate to home page
In the test 4 div, assert that the first button is enabled and that the second button is disabled

Test 5 - for 7thFeb22

Navigate to home page
In the test 5 div, wait for a button to be displayed (note: the delay is random) and then click it
Once you've clicked the button, assert that a success message is displayed
Assert that the button is now disabled

Test 6

Navigate to home page
Write a method that allows you to find the value of any cell on the grid
Use the method to find the value of the cell at coordinates 2, 2 (staring at 0 in the top left corner)
Assert that the value of the cell is "Ventosanzap"
-----------------------------------------------------------------------------------------------------
https://github.com/NagKothapalli/DigitAge-Jan2022-8AM-Maven.git

Implement the PageObjectModel .
Implement Cross Browser Testing
Implement Cross Platform Testing
Run Test cases on different environments like Dev,QA,Stage,Production dynamically.
Run Different testing types like smoke , regression dynamically .
Implement Data Driven Testing by reading multiple sets of data from properties file with a separator

PageFactory model with FindsBy annotation
TestNG - all annotations like BefroeTest , BeforeMethod , Test , AfterMethod, AfterTest 
TestNG Suite with single class , multiple classes 
TestNG suite with parallel execution 
TestNG with dependencies 
TestNG report - emailable html , index html 
Synchronization : Fixed wait or static wait 
Implicitwait
Explicitwait with WebDriverWait class .
Practice different ExpectedConditions like ElementToBeClickable , Visibile , TextVisible , allobjects visible, waitforalert, waitforframe etc...

//Assignment for 7thFeb-22:  Reproduce the below things on your own 
	
	//Relative path using canonical file path
		//Generate random number using Random class
		//Generate dynamic HTML file using extentreports API .
		//Generate new file for every execution . Append execution type in the filename like smoke / regression
		//Take Error screenshot dynamically . Save it as png file . Append the same in to the report in file case.